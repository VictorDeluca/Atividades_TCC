; ModuleID = '006b0fcf12fa06d0bb2b03be8aa1f419d00f0216.map2check/006b0fcf12fa06d0bb2b03be8aa1f419d00f0216.map2check-compiled.bc'
source_filename = "006b0fcf12fa06d0bb2b03be8aa1f419d00f0216.map2check-preprocessed.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind uwtable
define i32 @main() local_unnamed_addr #0 !dbg !7 {
_call:
  call void @llvm.dbg.value(metadata i32 1, metadata !11, metadata !DIExpression()), !dbg !12
  %_call1 = call i32 (...) @__VERIFIER_nondet_int(), !dbg !13
  call void @llvm.dbg.value(metadata i32 %_call1, metadata !14, metadata !DIExpression()), !dbg !15
  br label %_.0, !dbg !16

_.0:                                              ; preds = %_5, %_call
  %.0 = phi i32 [ 1, %_call ], [ %_call2, %_5 ]
  %crab_ = zext i32 %.0 to i64, !dbg !12
  %crab_3 = sub i64 0, %crab_, !dbg !12
  %crab_4 = icmp sle i64 %crab_3, -1, !dbg !12
  call void @llvm.assume(i1 %crab_4), !dbg !12, !crabllvm !2
  call void @llvm.dbg.value(metadata i32 %.0, metadata !11, metadata !DIExpression()), !dbg !12
  %_br = icmp slt i32 %.0, %_call1, !dbg !17
  br i1 %_br, label %_5, label %_.0.lcssa, !dbg !16

_5:                                               ; preds = %_.0
  %crab_5 = zext i32 %.0 to i64, !dbg !18
  %crab_6 = sub i64 0, %crab_5, !dbg !18
  %crab_7 = icmp sle i64 %crab_6, -1, !dbg !18
  call void @llvm.assume(i1 %crab_7), !dbg !18, !crabllvm !2
  %crab_8 = zext i32 %_call1 to i64, !dbg !18
  %crab_9 = sub i64 0, %crab_8, !dbg !18
  %crab_10 = icmp sle i64 %crab_9, -2, !dbg !18
  call void @llvm.assume(i1 %crab_10), !dbg !18, !crabllvm !2
  %crab_11 = zext i32 %_call1 to i64, !dbg !18
  %crab_12 = sub i64 0, %crab_11, !dbg !18
  %crab_13 = zext i32 %.0 to i64, !dbg !18
  %crab_14 = add i64 %crab_12, %crab_13, !dbg !18
  %crab_15 = icmp sle i64 %crab_14, -1, !dbg !18
  call void @llvm.assume(i1 %crab_15), !dbg !18, !crabllvm !2
  %_call2 = add nsw i32 %.0, 1, !dbg !18
  call void @llvm.dbg.value(metadata i32 %_call2, metadata !11, metadata !DIExpression()), !dbg !12
  br label %_.0, !dbg !16, !llvm.loop !20

_.0.lcssa:                                        ; preds = %_.0
  %.0.lcssa = phi i32 [ %.0, %_.0 ]
  %_8 = icmp slt i32 %_call1, %.0.lcssa, !dbg !22
  %_9 = zext i1 %_8 to i32, !dbg !22
  %_10 = bitcast i32 (...)* @__VERIFIER_assert to i32 (i32, ...)*
  %_ret = call i32 (i32, ...) %_10(i32 %_9), !dbg !23
  ret i32 0, !dbg !24
}

declare i32 @__VERIFIER_nondet_int(...) local_unnamed_addr #1

declare i32 @__VERIFIER_assert(...) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

declare void @verifier.assume(i1)

; Function Attrs: nounwind
declare void @llvm.assume(i1) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "006b0fcf12fa06d0bb2b03be8aa1f419d00f0216.map2check-preprocessed.c", directory: "/home/map2check/devel_tool/mygitclone/006b0fcf12fa06d0bb2b03be8aa1f419d00f0216.map2check")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!7 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 1, type: !8, isLocal: false, isDefinition: true, scopeLine: 2, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2)
!8 = !DISubroutineType(types: !9)
!9 = !{!10}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 3, type: !10)
!12 = !DILocation(line: 3, column: 6, scope: !7)
!13 = !DILocation(line: 4, column: 10, scope: !7)
!14 = !DILocalVariable(name: "n", scope: !7, file: !1, line: 4, type: !10)
!15 = !DILocation(line: 4, column: 6, scope: !7)
!16 = !DILocation(line: 6, column: 2, scope: !7)
!17 = !DILocation(line: 6, column: 9, scope: !7)
!18 = !DILocation(line: 7, column: 4, scope: !19)
!19 = distinct !DILexicalBlock(scope: !7, file: !1, line: 6, column: 13)
!20 = distinct !{!20, !16, !21}
!21 = !DILocation(line: 8, column: 2, scope: !7)
!22 = !DILocation(line: 9, column: 21, scope: !7)
!23 = !DILocation(line: 9, column: 2, scope: !7)
!24 = !DILocation(line: 10, column: 1, scope: !7)

